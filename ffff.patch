Index: camera/src/main/java/org/touchhome/bundle/camera/CameraEntryPoint.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- camera/src/main/java/org/touchhome/bundle/camera/CameraEntryPoint.java	(revision c4e0cf4d5c34c73fe731a965722bd1ecf7b021d1)
+++ camera/src/main/java/org/touchhome/bundle/camera/CameraEntryPoint.java	(date 1631294749063)
@@ -9,12 +9,14 @@
 import org.touchhome.bundle.api.EntityContext;
 import org.touchhome.bundle.api.model.Status;
 import org.touchhome.bundle.api.netty.NettyUtils;
+import org.touchhome.bundle.api.setting.SettingPluginStatus;
 import org.touchhome.bundle.camera.entity.BaseVideoCameraEntity;
 import org.touchhome.bundle.camera.handler.BaseCameraHandler;
 import org.touchhome.bundle.camera.handler.impl.OnvifCameraHandler;
 import org.touchhome.bundle.camera.onvif.BaseOnvifCameraBrandHandler;
 import org.touchhome.bundle.camera.onvif.CameraBrandHandlerDescription;
 import org.touchhome.bundle.camera.scanner.OnvifCameraHttpScanner;
+import org.touchhome.bundle.camera.setting.CameraStatusSetting;
 import org.touchhome.bundle.camera.ui.RestartHandlerOnChange;
 
 import java.lang.reflect.Method;
@@ -97,4 +99,9 @@
         // fire rescan whole possible items to see if ip address has been changed
         entityContext.getBean(OnvifCameraHttpScanner.class).executeScan(entityContext, null, null, true);
     }
+
+    @Override
+    public Class<? extends SettingPluginStatus> getBundleStatusSetting() {
+        return CameraStatusSetting.class;
+    }
 }
Index: zigbee/src/main/resources/zigBee/device-properties.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- zigbee/src/main/resources/zigBee/device-properties.json	(revision c4e0cf4d5c34c73fe731a965722bd1ecf7b021d1)
+++ zigbee/src/main/resources/zigBee/device-properties.json	(date 1630937600408)
@@ -30,6 +30,19 @@
       "disablePooling": true
     },
     {
+      "modelId": "lumi.sensor_magnet",
+      "name": "zigbee.mi.doorsensor",
+      "image": "zigbee-door-sensor",
+      "disablePooling": true,
+      "requireEndpoints": [
+        {
+          "typeId": "zigbee:switch_onoff",
+          "endpoint": 1,
+          "inputCluster": 6
+        }
+      ]
+    },
+    {
       "modelId": "lumi.sensor_wleak.aq1",
       "name": "zigbee.mi.leak",
       "image": "zigbee-leak",
Index: camera/src/main/java/org/touchhome/bundle/camera/entity/OnvifCameraEntity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- camera/src/main/java/org/touchhome/bundle/camera/entity/OnvifCameraEntity.java	(revision c4e0cf4d5c34c73fe731a965722bd1ecf7b021d1)
+++ camera/src/main/java/org/touchhome/bundle/camera/entity/OnvifCameraEntity.java	(date 1630606546765)
@@ -285,34 +285,37 @@
     }
 
     @Override
-    public void assembleActions(UIInputBuilder uiInputBuilder, boolean fetchValues) {
-        for (UIEntityItemBuilder uiEntity : uiInputBuilder.getUiEntityItemBuilders()) {
+    public UIInputBuilder assembleActions() {
+        UIInputBuilder uiInputBuilder = super.assembleActions();
+        for (UIEntityItemBuilder uiEntity : uiInputBuilder.getUiEntityItemBuilders(true)) {
             uiEntity.setDisabled(!this.isStart());
         }
         if (StringUtils.isEmpty(getIeeeAddress()) || getStatus() == Status.REQUIRE_AUTH) {
-            uiInputBuilder.addOpenDialogSelectableButton("AUTHENTICATE", "fas fa-sign-in-alt", null, (entityContext, params) -> {
+            uiInputBuilder.addOpenDialogSelectableButton("AUTHENTICATE", "fas fa-sign-in-alt", null, null,
+                    (entityContext, params) -> {
 
-                String user = params.getString("user");
-                String password = params.getString("pwd");
-                OnvifCameraEntity entity = this;
-                OnvifDeviceState onvifDeviceState = new OnvifDeviceState(getIp(), getOnvifPort(), 0, user, password);
-                try {
-                    onvifDeviceState.checkForErrors();
-                    setUser(user);
-                    setPassword(password);
-                    setName(onvifDeviceState.getInitialDevices().getName());
-                    setIeeeAddress(onvifDeviceState.getIEEEAddress());
+                        String user = params.getString("user");
+                        String password = params.getString("pwd");
+                        OnvifCameraEntity entity = this;
+                        OnvifDeviceState onvifDeviceState = new OnvifDeviceState(getIp(), getOnvifPort(), 0, user, password);
+                        try {
+                            onvifDeviceState.checkForErrors();
+                            setUser(user);
+                            setPassword(password);
+                            setName(onvifDeviceState.getInitialDevices().getName());
+                            setIeeeAddress(onvifDeviceState.getIEEEAddress());
 
-                    entityContext.save(entity);
-                    entityContext.ui().sendSuccessMessage("Onvif camera: " + getTitle() + " authenticated successfully");
-                } catch (Exception ex) {
-                    entityContext.ui().sendWarningMessage("Onvif camera: " + getTitle() + " fault response: " + ex.getMessage());
-                }
-                return null;
-            }).editDialog(dialogBuilder -> {
+                            entityContext.save(entity);
+                            entityContext.ui().sendSuccessMessage("Onvif camera: " + getTitle() + " authenticated successfully");
+                        } catch (Exception ex) {
+                            entityContext.ui().sendWarningMessage("Onvif camera: " + getTitle() + " fault response: " + ex.getMessage());
+                        }
+                        return null;
+                    }).editDialog(dialogBuilder -> {
                 dialogBuilder.addTextInput("user", getUser(), true);
                 dialogBuilder.addTextInput("pwd", getPassword().asString(), false);
             });
         }
+        return uiInputBuilder;
     }
 }
Index: camera/src/main/java/org/touchhome/bundle/camera/entity/BaseVideoStreamEntity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- camera/src/main/java/org/touchhome/bundle/camera/entity/BaseVideoStreamEntity.java	(revision c4e0cf4d5c34c73fe731a965722bd1ecf7b021d1)
+++ camera/src/main/java/org/touchhome/bundle/camera/entity/BaseVideoStreamEntity.java	(date 1630606546780)
@@ -46,7 +46,7 @@
 
     protected abstract void fireUpdateSnapshot(EntityContext entityContext, JSONObject params);
 
-    public abstract void assembleActions(UIInputBuilder uiInputBuilder, boolean fetchValues);
+    public abstract UIInputBuilder assembleActions();
 
     static class VideoStreamDiscovery extends BaseBeansItemsDiscovery {
 
@@ -67,6 +67,7 @@
 
     @Override
     public void assembleActions(UIInputBuilder uiInputBuilder) {
-        assembleActions(uiInputBuilder, true);
+        uiInputBuilder.from(assembleActions());
+        uiInputBuilder.fireFetchValues();
     }
 }
Index: zigbee/src/main/java/org/touchhome/bundle/zigbee/setting/ZigBeeStatusSetting.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- zigbee/src/main/java/org/touchhome/bundle/zigbee/setting/ZigBeeStatusSetting.java	(revision c4e0cf4d5c34c73fe731a965722bd1ecf7b021d1)
+++ zigbee/src/main/java/org/touchhome/bundle/zigbee/setting/ZigBeeStatusSetting.java	(date 1631475781148)
@@ -1,6 +1,11 @@
 package org.touchhome.bundle.zigbee.setting;
 
+import com.fazecast.jSerialComm.SerialPort;
+import org.touchhome.bundle.api.model.ActionResponseModel;
+import org.touchhome.bundle.api.model.OptionModel;
+import org.touchhome.bundle.api.model.Status;
 import org.touchhome.bundle.api.setting.SettingPluginStatus;
+import org.touchhome.bundle.api.ui.field.action.v1.UIInputBuilder;
 
 public class ZigBeeStatusSetting implements SettingPluginStatus {
 
@@ -8,4 +13,16 @@
     public int order() {
         return 400;
     }
+
+    @Override
+    public void setActions(UIInputBuilder actionSupplier) {
+        actionSupplier.addSelectBox("port", (entityContext, params) -> {
+            entityContext.setting().setValue(ZigBeePortSetting.class, SerialPort.getCommPort(params.getString("value")));
+            BundleStatusInfo value = entityContext.setting().getValue(ZigBeeStatusSetting.class);
+            if (value.getStatus() == Status.ONLINE) {
+                return ActionResponseModel.showSuccess("Success");
+            }
+            return ActionResponseModel.showError(value.getMessage());
+        }).setAsButton("fas fa-random", "primary", "SELECT_PORT").setOptions(OptionModel.listOfPorts(true));
+    }
 }
Index: zigbee/src/main/java/org/touchhome/bundle/zigbee/ZigBeeBundleEntryPoint.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- zigbee/src/main/java/org/touchhome/bundle/zigbee/ZigBeeBundleEntryPoint.java	(revision c4e0cf4d5c34c73fe731a965722bd1ecf7b021d1)
+++ zigbee/src/main/java/org/touchhome/bundle/zigbee/ZigBeeBundleEntryPoint.java	(date 1631139137010)
@@ -63,6 +63,7 @@
         this.entityContext.setting().listenValue(ConsoleHeaderZigBeeDiscoveryButtonSetting.class, "zb-start-scan", () ->
                 zigBeeDiscoveryService.startScan());
 
+        entityContext.setting().listenValue(ZigBeePortSetting.class, "zb-port", this::reInitialize);
         entityContext.setting().listenValue(ZigBeePortBaudSetting.class, "zb-port-baud-changed", this::reInitialize);
         entityContext.setting().listenValue(ZigBeeNetworkIdSetting.class, "zb-network-id-changed", this::reInitialize);
         entityContext.setting().listenValue(ZigBeeLinkKeySetting.class, "zb-link-key-changed", this::reInitialize);
@@ -90,7 +91,8 @@
 
         this.entityContext.setting().listenValue(ZigBeeStatusSetting.class, "zb-status-changed", status -> {
             entityContext.ui().addHeaderButton("zb-status", status.isOnline() ? TouchHomeUtils.Colors.GREEN : TouchHomeUtils.Colors.RED,
-                    status.isOnline() ? "Zigbee success running" : "Zigbee '" + status.getStatus() + "': " + status.getMessage(), "fas fa-bug", false, false, null, ZigBeeDeviceEntity.class, null);
+                    status.isOnline() ? "Zigbee success running" : "Zigbee '" + status.getStatus() + "': " + status.getMessage(),
+                    "fas fa-bug", false, null, null, ZigBeeDeviceEntity.class, null);
 
             if (status.isOnline()) {
                 // init devices
Index: zigbee/src/main/java/org/touchhome/bundle/zigbee/internal/ZigBeeSerialPort.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- zigbee/src/main/java/org/touchhome/bundle/zigbee/internal/ZigBeeSerialPort.java	(revision c4e0cf4d5c34c73fe731a965722bd1ecf7b021d1)
+++ zigbee/src/main/java/org/touchhome/bundle/zigbee/internal/ZigBeeSerialPort.java	(date 1630927081124)
@@ -7,6 +7,7 @@
 import org.touchhome.bundle.api.port.BaseSerialPort;
 import org.touchhome.bundle.api.port.PortFlowControl;
 
+import java.io.IOException;
 import java.util.function.Consumer;
 
 import static com.zsmartsystems.zigbee.transport.ZigBeePort.FlowControl.FLOWCONTROL_OUT_NONE;
@@ -110,6 +111,22 @@
         }
     }
 
+    @Override
+    public void write(int[] outArray) {
+        if (outputStream == null) {
+            return;
+        }
+        byte[] bytes = new byte[outArray.length];
+        int cnt = 0;
+        for (int value : outArray) {
+            bytes[cnt++] = (byte) value;
+        }
+        try {
+            outputStream.write(bytes);
+        } catch (IOException e) {
+        }
+    }
+
     @Override
     public void purgeRxBuffer() {
         synchronized (bufferSynchronisationObject) {
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- pom.xml	(revision c4e0cf4d5c34c73fe731a965722bd1ecf7b021d1)
+++ pom.xml	(date 1628857909742)
@@ -36,7 +36,7 @@
     </modules>
 
     <properties>
-        <bundle-api.version>1.2.0-SNAPSHOT</bundle-api.version>
+        <bundle-api.version>1.2.1-SNAPSHOT</bundle-api.version>
     </properties>
 
     <dependencies>
Index: arduino/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- arduino/pom.xml	(revision c4e0cf4d5c34c73fe731a965722bd1ecf7b021d1)
+++ arduino/pom.xml	(date 1628857909773)
@@ -4,7 +4,7 @@
     <parent>
         <artifactId>touchhome-bundle</artifactId>
         <groupId>org.touchhome.bundle</groupId>
-        <version>1.2.0-SNAPSHOT</version>
+        <version>1.2.1-SNAPSHOT</version>
     </parent>
     <modelVersion>4.0.0</modelVersion>
 
Index: camera/src/main/resources/i18n/en.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- camera/src/main/resources/i18n/en.json	(revision c4e0cf4d5c34c73fe731a965722bd1ecf7b021d1)
+++ camera/src/main/resources/i18n/en.json	(date 1630600159789)
@@ -1,12 +1,20 @@
 {
-  "OSD": "Basic settings",
-  "ISP": "Advanced settings",
-  "ENC": "Streams",
-  "mainStream": "Primary(Clear) stream",
-  "subStream": "Secondary(Fluent) stream",
-  "RECORD_MP4": "Record a MP4",
-  "RECORD_GIF": "Record a GIF",
+  "VIDEO": {
+    "OSD": "Basic settings",
+    "ISP": "Advanced settings",
+    "ENC": "Streams",
+    "mainStream": "Primary(Clear) stream",
+    "subStream": "Secondary(Fluent) stream",
+    "RECORD_MP4": "Record a MP4",
+    "RECORD_GIF": "Record a GIF"
+  },
   "selection": {
+    "ReolinkBrandHandler": "Reolink Brand",
+    "FoscamBrandHandler": "Foscam Brand",
+    "DoorBirdBrandHandler": "DoorBird Brand",
+    "OnvifBrandHandler": "General Onvif",
+    "DahuaBrandHandler": "Dahua Brand",
+
     "WidgetCameraEntity": "Camera",
     "OnvifCameraEntity": "Onvif Camera",
     "UsbCameraEntity": "Usb Camera",
@@ -49,7 +57,6 @@
       "streamSecondaryBitRate_description": "Maximum Bitrate(kbps)",
       "streamSecondaryFrameRate_description": "Frame Rate(fps)",
       "streamSecondaryH264Profile_description": "H.264 Profile",
-      "recordAudio_description": "Record audio",
       "3dnr_description": "3-Dimensional Noise Reduction",
       "exposure_description": "Exposure",
       "antiFlicker_description": "Anti flickr",
Index: firmata/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- firmata/pom.xml	(revision c4e0cf4d5c34c73fe731a965722bd1ecf7b021d1)
+++ firmata/pom.xml	(date 1628857909789)
@@ -4,7 +4,7 @@
     <parent>
         <artifactId>touchhome-bundle</artifactId>
         <groupId>org.touchhome.bundle</groupId>
-        <version>1.2.0-SNAPSHOT</version>
+        <version>1.2.1-SNAPSHOT</version>
     </parent>
     <modelVersion>4.0.0</modelVersion>
 
Index: raspberry/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- raspberry/pom.xml	(revision c4e0cf4d5c34c73fe731a965722bd1ecf7b021d1)
+++ raspberry/pom.xml	(date 1628857909808)
@@ -4,7 +4,7 @@
     <parent>
         <artifactId>touchhome-bundle</artifactId>
         <groupId>org.touchhome.bundle</groupId>
-        <version>1.2.0-SNAPSHOT</version>
+        <version>1.2.1-SNAPSHOT</version>
     </parent>
     <modelVersion>4.0.0</modelVersion>
 
Index: telegram/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- telegram/pom.xml	(revision c4e0cf4d5c34c73fe731a965722bd1ecf7b021d1)
+++ telegram/pom.xml	(date 1628857909797)
@@ -4,7 +4,7 @@
     <parent>
         <artifactId>touchhome-bundle</artifactId>
         <groupId>org.touchhome.bundle</groupId>
-        <version>1.2.0-SNAPSHOT</version>
+        <version>1.2.1-SNAPSHOT</version>
     </parent>
     <modelVersion>4.0.0</modelVersion>
 
Index: zigbee/src/main/java/org/touchhome/bundle/zigbee/SelectModelIdentifierDynamicLoader.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- zigbee/src/main/java/org/touchhome/bundle/zigbee/SelectModelIdentifierDynamicLoader.java	(revision c4e0cf4d5c34c73fe731a965722bd1ecf7b021d1)
+++ zigbee/src/main/java/org/touchhome/bundle/zigbee/SelectModelIdentifierDynamicLoader.java	(date 1631036199247)
@@ -14,6 +14,6 @@
     @Override
     public Collection<OptionModel> loadOptions(BaseEntity baseEntity, EntityContext entityContext, String[] staticParameters) {
         return ZigBeeRequireEndpoints.get().getZigBeeRequireEndpoints().stream().map(c ->
-                OptionModel.of(c.getModelId(), c.getName()).setImage(c.getImage())).collect(Collectors.toList());
+                OptionModel.of(c.getModelId(), c.getName()).setIcon(c.getImage())).collect(Collectors.toList());
     }
 }
Index: zigbee/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- zigbee/pom.xml	(revision c4e0cf4d5c34c73fe731a965722bd1ecf7b021d1)
+++ zigbee/pom.xml	(date 1630936480335)
@@ -4,7 +4,7 @@
     <parent>
         <artifactId>touchhome-bundle</artifactId>
         <groupId>org.touchhome.bundle</groupId>
-        <version>1.2.0-SNAPSHOT</version>
+        <version>1.2.1-SNAPSHOT</version>
     </parent>
     <modelVersion>4.0.0</modelVersion>
 
@@ -13,7 +13,7 @@
     <packaging>jar</packaging>
 
     <properties>
-        <zsmartsystems.version>1.3.11</zsmartsystems.version>
+        <zsmartsystems.version>1.4.0</zsmartsystems.version>
         <xstream.version>1.4.15</xstream.version>
     </properties>
 
@@ -36,19 +36,4 @@
             <version>${zsmartsystems.version}</version>
         </dependency>
     </dependencies>
-
-    <repositories>
-        <repository>
-            <id>snapshots-zsmartsystems-com.zsmartsystems</id>
-            <name>zsmartsystems-com.zsmartsystems</name>
-            <url>https://oss.jfrog.org/artifactory/oss-snapshot-local/</url>
-            <releases>
-                <enabled>false</enabled>
-                <updatePolicy>never</updatePolicy>
-            </releases>
-            <snapshots>
-                <enabled>true</enabled>
-            </snapshots>
-        </repository>
-    </repositories>
 </project>
Index: camera/src/main/java/org/touchhome/bundle/camera/workspace/Scratch3FFmpegBlocks.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- camera/src/main/java/org/touchhome/bundle/camera/workspace/Scratch3FFmpegBlocks.java	(revision c4e0cf4d5c34c73fe731a965722bd1ecf7b021d1)
+++ camera/src/main/java/org/touchhome/bundle/camera/workspace/Scratch3FFmpegBlocks.java	(date 1629640662880)
@@ -32,7 +32,7 @@
     private final Scratch3Block outputArgCommand;
 
     public Scratch3FFmpegBlocks(EntityContext entityContext, CameraEntryPoint cameraEntryPoint) {
-        super("#3B8F33", entityContext, cameraEntryPoint, "ffmpeg");
+        super("#87B023", entityContext, cameraEntryPoint, "ffmpeg");
         setParent("media");
 
         this.inputArgCommand = ofValue(Scratch3Block.ofHandler(10, FFmpegApplyHandler.argsInput.name(), BlockType.command,
Index: cloud/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud/pom.xml	(revision c4e0cf4d5c34c73fe731a965722bd1ecf7b021d1)
+++ cloud/pom.xml	(date 1628857909781)
@@ -4,7 +4,7 @@
     <parent>
         <artifactId>touchhome-bundle</artifactId>
         <groupId>org.touchhome.bundle</groupId>
-        <version>1.2.0-SNAPSHOT</version>
+        <version>1.2.1-SNAPSHOT</version>
     </parent>
     <modelVersion>4.0.0</modelVersion>
 
Index: bluetooth/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- bluetooth/pom.xml	(revision c4e0cf4d5c34c73fe731a965722bd1ecf7b021d1)
+++ bluetooth/pom.xml	(date 1628857909765)
@@ -4,7 +4,7 @@
     <parent>
         <artifactId>touchhome-bundle</artifactId>
         <groupId>org.touchhome.bundle</groupId>
-        <version>1.2.0-SNAPSHOT</version>
+        <version>1.2.1-SNAPSHOT</version>
     </parent>
     <modelVersion>4.0.0</modelVersion>
 
Index: camera/src/main/java/org/touchhome/bundle/camera/entity/BaseVideoCameraEntity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- camera/src/main/java/org/touchhome/bundle/camera/entity/BaseVideoCameraEntity.java	(revision c4e0cf4d5c34c73fe731a965722bd1ecf7b021d1)
+++ camera/src/main/java/org/touchhome/bundle/camera/entity/BaseVideoCameraEntity.java	(date 1630606546795)
@@ -106,13 +106,14 @@
 
 
     @Override
-    public void assembleActions(UIInputBuilder uiInputBuilder, boolean fetchValues) {
+    public UIInputBuilder assembleActions() {
         if (cameraHandler != null) {
-            cameraHandler.assembleActions(uiInputBuilder, fetchValues);
+            return cameraHandler.assembleActions();
         }
+        return null;
     }
 
-    @UIContextMenuAction(value = "RECORD_MP4", icon = "fas fa-file-video", inputs = {
+    @UIContextMenuAction(value = "VIDEO.RECORD_MP4", icon = "fas fa-file-video", inputs = {
             @UIActionInput(name = "fileName", value = "record_${timestamp}", min = 4, max = 30),
             @UIActionInput(name = "secondsToRecord", type = UIActionInput.Type.number, value = "10", min = 5, max = 100)
     })
@@ -127,7 +128,7 @@
         return ActionResponseModel.showSuccess("SUCCESS");
     }
 
-    @UIContextMenuAction(value = "RECORD_GIF", icon = "fas fa-magic", inputs = {
+    @UIContextMenuAction(value = "VIDEO.RECORD_GIF", icon = "fas fa-magic", inputs = {
             @UIActionInput(name = "fileName", value = "record_${timestamp}", min = 4, max = 30),
             @UIActionInput(name = "secondsToRecord", type = UIActionInput.Type.number, value = "3", min = 1, max = 10)
     })
Index: xaomi/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- xaomi/pom.xml	(revision c4e0cf4d5c34c73fe731a965722bd1ecf7b021d1)
+++ xaomi/pom.xml	(date 1628857909724)
@@ -4,7 +4,7 @@
     <parent>
         <artifactId>touchhome-bundle</artifactId>
         <groupId>org.touchhome.bundle</groupId>
-        <version>1.2.0-SNAPSHOT</version>
+        <version>1.2.1-SNAPSHOT</version>
     </parent>
     <modelVersion>4.0.0</modelVersion>
 
Index: camera/src/main/java/org/touchhome/bundle/camera/handler/BaseCameraHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- camera/src/main/java/org/touchhome/bundle/camera/handler/BaseCameraHandler.java	(revision c4e0cf4d5c34c73fe731a965722bd1ecf7b021d1)
+++ camera/src/main/java/org/touchhome/bundle/camera/handler/BaseCameraHandler.java	(date 1630606546736)
@@ -65,6 +65,9 @@
     private EntityContextBGP.ThreadContext<Void> pollCameraJob;
     private Map<String, Consumer<Status>> stateListeners = new HashMap<>();
 
+    // actions holder
+    private UIInputBuilder uiInputBuilder;
+
     public BaseCameraHandler(T cameraEntity, EntityContext entityContext) {
         setCameraEntity(cameraEntity);
         this.cameraEntityID = cameraEntity.getEntityID();
@@ -207,33 +210,13 @@
         cameraEntity.setStatus(status, message);
     }
 
-    public void assembleActions(UIInputBuilder uiInputBuilder, boolean fetchValues) {
-        assembleAdditionalCameraActions(uiInputBuilder);
-        if (fetchValues) {
-            uiInputBuilder.fireFetchValues();
-            /* TODO: for (StatefulContextMenuAction action : actions) {
-                for (Consumer<StatefulContextMenuAction> updateHandler : action.getUpdateHandlers().values()) {
-                    updateHandler.accept(action);
-                }
-            }*/
+    public UIInputBuilder assembleActions() {
+        if (this.uiInputBuilder == null) {
+            this.uiInputBuilder = entityContext.ui().inputBuilder();
+            assembleAdditionalCameraActions(uiInputBuilder);
         }
+        return uiInputBuilder;
     }
-
-    /*TODO: public Set<StatefulContextMenuAction> getCameraActions(boolean fetchValues) {
-        if (actions == null) {
-            // additional actions should be first
-            actions = new TreeSet<>(getAdditionalCameraActions());
-            actions.addAll(CameraActionBuilder.assemble(this));
-        }
-        if (fetchValues) {
-            for (StatefulContextMenuAction action : actions) {
-                for (Consumer<StatefulContextMenuAction> updateHandler : action.getUpdateHandlers().values()) {
-                    updateHandler.accept(action);
-                }
-            }
-        }
-        return actions;
-    }*/
 
     protected void assembleAdditionalCameraActions(UIInputBuilder uiInputBuilder) {
 
Index: serial/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- serial/pom.xml	(revision c4e0cf4d5c34c73fe731a965722bd1ecf7b021d1)
+++ serial/pom.xml	(date 1628857909733)
@@ -4,7 +4,7 @@
     <parent>
         <artifactId>touchhome-bundle</artifactId>
         <groupId>org.touchhome.bundle</groupId>
-        <version>1.2.0-SNAPSHOT</version>
+        <version>1.2.1-SNAPSHOT</version>
     </parent>
     <modelVersion>4.0.0</modelVersion>
 
Index: camera/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- camera/pom.xml	(revision c4e0cf4d5c34c73fe731a965722bd1ecf7b021d1)
+++ camera/pom.xml	(date 1628857909755)
@@ -4,7 +4,7 @@
     <parent>
         <artifactId>touchhome-bundle</artifactId>
         <groupId>org.touchhome.bundle</groupId>
-        <version>1.2.0-SNAPSHOT</version>
+        <version>1.2.1-SNAPSHOT</version>
     </parent>
     <modelVersion>4.0.0</modelVersion>
 
Index: zigbee/src/main/java/org/touchhome/bundle/zigbee/converter/impl/ZigBeeConverterMeteringSummationReceived.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- zigbee/src/main/java/org/touchhome/bundle/zigbee/converter/impl/ZigBeeConverterMeteringSummationReceived.java	(date 1630937001819)
+++ zigbee/src/main/java/org/touchhome/bundle/zigbee/converter/impl/ZigBeeConverterMeteringSummationReceived.java	(date 1630937001819)
@@ -0,0 +1,17 @@
+package org.touchhome.bundle.zigbee.converter.impl;
+
+import com.zsmartsystems.zigbee.zcl.clusters.ZclMeteringCluster;
+import lombok.extern.log4j.Log4j2;
+
+/**
+ * ZigBee channel converter for summation received measurement
+ */
+@Log4j2
+@ZigBeeConverter(name = "zigbee:metering_sumreceived", clientClusters = {ZclMeteringCluster.CLUSTER_ID})
+public class ZigBeeConverterMeteringSummationReceived extends ZigBeeConverterMeteringInstantaneousDemand {
+
+    @Override
+    public int getInputAttributeId() {
+        return ZclMeteringCluster.ATTR_CURRENTSUMMATIONRECEIVED;
+    }
+}
Index: zigbee/src/main/java/org/touchhome/bundle/zigbee/converter/impl/ZigBeeInputBaseConverter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- zigbee/src/main/java/org/touchhome/bundle/zigbee/converter/impl/ZigBeeInputBaseConverter.java	(revision c4e0cf4d5c34c73fe731a965722bd1ecf7b021d1)
+++ zigbee/src/main/java/org/touchhome/bundle/zigbee/converter/impl/ZigBeeInputBaseConverter.java	(date 1630919724289)
@@ -115,4 +115,16 @@
     protected int getInputClusterType() {
         return getZclClusterType().getId();
     }
+
+    protected boolean configureReporting(ZclAttribute attribute) {
+        // Configure reporting - no faster than once per second - no slower than 2 hours.
+        try {
+            CommandResult reportingResponse = attribute.setReporting(3, REPORTING_PERIOD_DEFAULT_MAX, 1L).get();
+            handleReportingResponse(reportingResponse, POLLING_PERIOD_HIGH, REPORTING_PERIOD_DEFAULT_MAX);
+        } catch (InterruptedException | ExecutionException e) {
+            log.error("{}: Exception setting reporting ", endpoint.getIeeeAddress(), e);
+            return false;
+        }
+        return true;
+    }
 }
Index: camera/src/main/java/org/touchhome/bundle/camera/ui/CameraActionBuilder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- camera/src/main/java/org/touchhome/bundle/camera/ui/CameraActionBuilder.java	(revision c4e0cf4d5c34c73fe731a965722bd1ecf7b021d1)
+++ camera/src/main/java/org/touchhome/bundle/camera/ui/CameraActionBuilder.java	(date 1630964030712)
@@ -16,8 +16,10 @@
 import org.touchhome.bundle.api.ui.field.action.v1.UIInputBuilder;
 import org.touchhome.bundle.api.ui.field.action.v1.item.UIMultiButtonItemBuilder;
 import org.touchhome.bundle.api.ui.field.action.v1.item.UISelectBoxItemBuilder;
+import org.touchhome.bundle.api.ui.field.action.v1.item.UISliderItemBuilder;
 import org.touchhome.bundle.api.ui.field.action.v1.layout.UIFlexLayoutBuilder;
 import org.touchhome.bundle.api.ui.field.action.v1.layout.UILayoutBuilder;
+import org.touchhome.bundle.api.ui.field.action.v1.layout.dialog.UIStickyDialogItemBuilder;
 import org.touchhome.bundle.api.ui.field.selection.UIFieldSelection;
 import org.touchhome.bundle.api.util.TouchHomeUtils;
 
@@ -32,7 +34,6 @@
 @Log4j2
 public class CameraActionBuilder {
 
-
     public static void assembleActions(CameraActionsContext instance, UIInputBuilder uiInputBuilder) {
         Set<String> handledMethods = new HashSet<>();
         for (Method method : MethodUtils.getMethodsWithAnnotation(instance.getClass(), UICameraAction.class, true, false)) {
@@ -43,17 +44,6 @@
                 UICameraAction uiCameraAction = method.getDeclaredAnnotation(UICameraAction.class);
                 Parameter actionParameter = method.getParameters()[0];
                 Function<String, Object> actionParameterConverter = buildParameterActionConverter(actionParameter);
-                // JSONObject options = new JSONObject();
-                /*if (uiCameraAction.min() != 0) {
-                    options.put("min", uiCameraAction.min());
-                }
-                if (uiCameraAction.max() != 100) {
-                    options.put("max", uiCameraAction.max());
-                }
-                if (StringUtils.isNotEmpty(uiCameraAction.selectReplacer())) {
-                    options.put("selectReplacer", uiCameraAction.selectReplacer());
-                }*/
-                //  Map<String, Consumer<StatefulContextMenuAction>> updateHandlers = new HashMap<>();
 
                 UIFieldType type;
                 if (uiCameraAction.type() == UICameraAction.ActionType.AutoDiscover) {
@@ -81,10 +71,18 @@
                 UILayoutBuilder layoutBuilder = uiInputBuilder;
                 if (StringUtils.isNotEmpty(uiCameraAction.group())) {
 
-                    layoutBuilder = uiInputBuilder.addFlex(uiCameraAction.group());
-                    if (StringUtils.isNotEmpty(uiCameraAction.subGroup())) {
-                        layoutBuilder = layoutBuilder.addStickyDialogButton(
-                                uiCameraAction.subGroup(), uiCameraAction.subGroupIcon(), null);
+                    if (StringUtils.isEmpty(uiCameraAction.subGroup())) {
+                        layoutBuilder = uiInputBuilder.addFlex(uiCameraAction.group(), uiCameraAction.order())
+                                .columnFlexDirection()
+                                .setBorderArea(uiCameraAction.group());
+                    } else {
+                        UIStickyDialogItemBuilder stickyLayoutBuilder = layoutBuilder.addStickyDialogButton(
+                                uiCameraAction.group() + "_sb", uiCameraAction.subGroupIcon(), null, uiCameraAction.order())
+                                .editButton(buttonItemBuilder -> buttonItemBuilder.setText(uiCameraAction.group()));
+
+                        layoutBuilder = stickyLayoutBuilder.addFlex(uiCameraAction.subGroup(), uiCameraAction.order())
+                                .setBorderArea(uiCameraAction.subGroup())
+                                .columnFlexDirection();
                     }
                 }
                 UICameraDimmerButton[] buttons = method.getDeclaredAnnotationsByType(UICameraDimmerButton.class);
@@ -92,11 +90,10 @@
                     if (uiCameraAction.type() != UICameraAction.ActionType.Dimmer) {
                         throw new RuntimeException("Method " + method.getName() + " annotated with @UICameraDimmerButton, but @UICameraAction has no dimmer type");
                     }
-                    UIFlexLayoutBuilder flex = layoutBuilder.addFlex("dimmer");
-                    // TODO: flex.addRawEntityBuilder(uiEntityItemBuilder);
-                    UIMultiButtonItemBuilder multiButtonItemBuilder = flex.addMultiButton("dimm_btns", actionHandler);
+                    UIFlexLayoutBuilder flex = layoutBuilder.addFlex("dimmer", uiCameraAction.order());
+                    UIMultiButtonItemBuilder multiButtonItemBuilder = flex.addMultiButton("dimm_btns", actionHandler, uiCameraAction.order());
                     for (UICameraDimmerButton button : buttons) {
-                        multiButtonItemBuilder.addExtraButton(button.name()).setIcon(button.icon(), null);
+                        multiButtonItemBuilder.addButton(button.name(), button.icon(), null);
                     }
                     layoutBuilder = flex;
                 }
@@ -171,13 +168,15 @@
                                                             UIActionHandler handler) {
         switch (type) {
             case SelectBox:
-                return layoutBuilder.addSelectBox(uiCameraAction.name(), handler);
+                return layoutBuilder.addSelectBox(uiCameraAction.name(), handler, uiCameraAction.order()).setSelectReplacer(uiCameraAction.min(),
+                        uiCameraAction.max(), uiCameraAction.selectReplacer());
             case Slider:
-                return layoutBuilder.addSlider(uiCameraAction.name(), uiCameraAction.min(), uiCameraAction.max(), handler).setSelectReplacer(uiCameraAction.selectReplacer());
+                return layoutBuilder.addSlider(uiCameraAction.name(), 0, uiCameraAction.min(),
+                        uiCameraAction.max(), handler, UISliderItemBuilder.SliderType.Regular, uiCameraAction.order());
             case Boolean:
-                return layoutBuilder.addCheckbox(uiCameraAction.name(), false, handler);
+                return layoutBuilder.addCheckbox(uiCameraAction.name(), false, handler, uiCameraAction.order());
             case String:
-                return layoutBuilder.addInfo(uiCameraAction.name());
+                return layoutBuilder.addInfo(uiCameraAction.name(), uiCameraAction.order());
             default:
                 throw new RuntimeException("Unknown type: " + type);
         }
Index: zigbee/src/main/java/org/touchhome/bundle/zigbee/converter/impl/ZigBeeConverterMeteringSummationDelivered.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- zigbee/src/main/java/org/touchhome/bundle/zigbee/converter/impl/ZigBeeConverterMeteringSummationDelivered.java	(date 1630936988789)
+++ zigbee/src/main/java/org/touchhome/bundle/zigbee/converter/impl/ZigBeeConverterMeteringSummationDelivered.java	(date 1630936988789)
@@ -0,0 +1,17 @@
+package org.touchhome.bundle.zigbee.converter.impl;
+
+import com.zsmartsystems.zigbee.zcl.clusters.ZclMeteringCluster;
+import lombok.extern.log4j.Log4j2;
+
+/**
+ * ZigBee channel converter for summation delivered measurement
+ */
+@Log4j2
+@ZigBeeConverter(name = "zigbee:metering_sumdelivered", clientClusters = {ZclMeteringCluster.CLUSTER_ID})
+public class ZigBeeConverterMeteringSummationDelivered extends ZigBeeConverterMeteringInstantaneousDemand {
+
+    @Override
+    public int getInputAttributeId() {
+        return ZclMeteringCluster.ATTR_CURRENTSUMMATIONDELIVERED;
+    }
+}
Index: camera/src/main/java/org/touchhome/bundle/camera/onvif/impl/ReolinkBrandHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- camera/src/main/java/org/touchhome/bundle/camera/onvif/impl/ReolinkBrandHandler.java	(revision c4e0cf4d5c34c73fe731a965722bd1ecf7b021d1)
+++ camera/src/main/java/org/touchhome/bundle/camera/onvif/impl/ReolinkBrandHandler.java	(date 1631000012426)
@@ -42,7 +42,7 @@
         super(onvifCameraEntity);
     }
 
-    @UICameraAction(name = CHANNEL_AUTO_LED, order = 40, icon = "fas fa-lightbulb")
+    @UICameraAction(name = CHANNEL_AUTO_LED, order = 10, icon = "fas fa-lightbulb")
     public void autoLed(boolean on) {
         String state = on ? "Auto" : "Off";
         String body = "[{\"cmd\":\"SetIrLights\",\"action\":0,\"param\":{\"IrLights\":{\"state\":\"" + state + "\"}}}]";
@@ -57,23 +57,12 @@
         return getAttribute(CHANNEL_AUTO_LED);
     }
 
-    @UICameraAction(name = CHANNEL_RECORD_AUDIO, order = 41, icon = "fas fa-microphone-slash")
-    public void setRecAudio(boolean on) {
-        setSetting("Esp", isp -> isp.set(boolToInt(on), "audio"));
-    }
-
-    @UICameraActionGetter(CHANNEL_RECORD_AUDIO)
-    public State getRecAudio() {
-        JsonType esp = (JsonType) getAttribute("Esp");
-        return esp == null ? null : OnOffType.valueOf(esp.getJsonNode().path("audio").asInt() == 1);
-    }
-
     @UICameraActionGetter(CHANNEL_POSITION_NAME)
     public State getNamePosition() {
         return getOSDPosition("osdChannel");
     }
 
-    @UICameraAction(name = CHANNEL_POSITION_NAME, order = 50, icon = "fas fa-sort-amount-down-alt", group = "OSD")
+    @UICameraAction(name = CHANNEL_POSITION_NAME, order = 100, icon = "fas fa-sort-amount-down-alt", group = "VIDEO.OSD")
     @UICameraSelectionAttributeValues(value = "OsdRange", path = {"osdChannel", "pos"}, prependValues = {"", "Hide"})
     public void setNamePosition(String position) {
         setSetting("Osd", osd -> {
@@ -86,18 +75,7 @@
         });
     }
 
-    @UICameraAction(name = CHANNEL_SHOW_DATETIME, order = 51, icon = "fas fa-copyright", group = "OSD")
-    public void setShowDateTime(boolean on) {
-        setSetting("Osd", osd -> osd.set(boolToInt(on), "osdTime", "enable"));
-    }
-
-    @UICameraActionGetter(CHANNEL_SHOW_DATETIME)
-    public State getShowDateTime() {
-        JsonType osd = (JsonType) getAttribute("Osd");
-        return osd == null ? null : OnOffType.valueOf(osd.getJsonNode().path("osdTime").path("enable").asInt() == 1);
-    }
-
-    @UICameraAction(name = CHANNEL_POSITION_DATETIME, order = 52, icon = "fas fa-sort-numeric-up", group = "OSD")
+    @UICameraAction(name = CHANNEL_POSITION_DATETIME, order = 101, icon = "fas fa-sort-numeric-up", group = "VIDEO.OSD")
     @UICameraSelectionAttributeValues(value = "OsdRange", path = {"osdTime", "pos"}, prependValues = {"", "Hide"})
     public void setDateTimePosition(String position) {
         setSetting("Osd", osd -> {
@@ -115,7 +93,7 @@
         return getOSDPosition("osdTime");
     }
 
-    @UICameraAction(name = CHANNEL_SHOW_WATERMARK, order = 53, icon = "fas fa-copyright", group = "OSD")
+    @UICameraAction(name = CHANNEL_SHOW_WATERMARK, order = 102, icon = "fas fa-copyright", group = "VIDEO.OSD")
     public void setShowWatermark(boolean on) {
         setSetting("Osd", osd -> osd.set(boolToInt(on), "watermark"));
     }
@@ -126,7 +104,18 @@
         return osd == null ? null : OnOffType.valueOf(osd.getJsonNode().path("watermark").asInt() == 1);
     }
 
-    @UICameraAction(name = CHANNEL_IMAGE_ROTATE, order = 60, icon = "fas fa-copyright", group = "ISP")
+    @UICameraAction(name = CHANNEL_SHOW_DATETIME, order = 103, icon = "fas fa-copyright", group = "VIDEO.OSD")
+    public void setShowDateTime(boolean on) {
+        setSetting("Osd", osd -> osd.set(boolToInt(on), "osdTime", "enable"));
+    }
+
+    @UICameraActionGetter(CHANNEL_SHOW_DATETIME)
+    public State getShowDateTime() {
+        JsonType osd = (JsonType) getAttribute("Osd");
+        return osd == null ? null : OnOffType.valueOf(osd.getJsonNode().path("osdTime").path("enable").asInt() == 1);
+    }
+
+    @UICameraAction(name = CHANNEL_IMAGE_ROTATE, order = 160, icon = "fas fa-copyright", group = "VIDEO.ISP")
     public void setRotateImage(boolean on) {
         setSetting("Isp", isp -> isp.set(boolToInt(on), "rotation"));
     }
@@ -137,7 +126,7 @@
         return isp == null ? null : OnOffType.valueOf(isp.getJsonNode().path("rotation").asInt() == 1);
     }
 
-    @UICameraAction(name = CHANNEL_IMAGE_MIRROR, order = 61, icon = "fas fa-copyright", group = "ISP")
+    @UICameraAction(name = CHANNEL_IMAGE_MIRROR, order = 161, icon = "fas fa-copyright", group = "VIDEO.ISP")
     public void setMirrorImage(boolean on) {
         setSetting("Isp", isp -> isp.set(boolToInt(on), "mirroring"));
     }
@@ -148,7 +137,7 @@
         return isp == null ? null : OnOffType.valueOf(isp.getJsonNode().path("mirroring").asInt() == 1);
     }
 
-    @UICameraAction(name = CHANNEL_ANTI_FLICKER, order = 62, icon = "fab fa-flickr", group = "ISP")
+    @UICameraAction(name = CHANNEL_ANTI_FLICKER, order = 162, icon = "fab fa-flickr", group = "VIDEO.ISP")
     @UICameraSelectionAttributeValues(value = "IspRange", path = {"antiFlicker"})
     public void setAntiFlicker(String value) {
         setSetting("Isp", isp -> isp.set(value, "antiFlicker"));
@@ -160,7 +149,7 @@
         return isp == null ? null : new StringType(isp.get("antiFlicker").asText());
     }
 
-    @UICameraAction(name = CHANNEL_EXPOSURE, order = 63, icon = "fas fa-sun", group = "ISP")
+    @UICameraAction(name = CHANNEL_EXPOSURE, order = 163, icon = "fas fa-sun", group = "VIDEO.ISP")
     @UICameraSelectionAttributeValues(value = "IspRange", path = {"exposure"})
     public void setExposure(String value) {
         setSetting("Isp", isp -> isp.set(value, "exposure"));
@@ -172,7 +161,7 @@
         return isp == null ? null : new StringType(isp.get("exposure").asText());
     }
 
-    @UICameraAction(name = CHANNEL_DAY_NIGHT, order = 64, icon = "fas fa-cloud-sun", group = "ISP")
+    @UICameraAction(name = CHANNEL_DAY_NIGHT, order = 164, icon = "fas fa-cloud-sun", group = "VIDEO.ISP")
     @UICameraSelectionAttributeValues(value = "IspRange", path = {"dayNight"})
     public void setDayNight(String value) {
         setSetting("Isp", isp -> isp.set(value, "dayNight"));
@@ -184,7 +173,7 @@
         return isp == null ? null : new StringType(isp.getJsonNode().path("dayNight").asText());
     }
 
-    @UICameraAction(name = CHANNEL_3DNR, order = 61, icon = "fab fa-unity", group = "ISP")
+    @UICameraAction(name = CHANNEL_3DNR, order = 165, icon = "fab fa-unity", group = "VIDEO.ISP")
     public void set3DNR(boolean on) {
         setSetting("Isp", isp -> isp.set(boolToInt(on), "nr3d"));
     }
@@ -195,11 +184,21 @@
         return isp == null ? null : OnOffType.valueOf(isp.getJsonNode().path("nr3d").asInt() == 1);
     }
 
-    @UICameraAction(name = CHANNEL_STREAM_MAIN_RESOLUTION, order = 80, icon = "fas fa-microphone-slash",
-            group = "ENC", subGroup = "mainStream", subGroupIcon = "fas fa-dice-six")
+    @UICameraAction(name = CHANNEL_RECORD_AUDIO, order = 80, group = "VIDEO.ENC", subGroup = "VIDEO.mainStream", subGroupIcon = "fas fa-dice-six")
+    public void setRecAudio(boolean on) {
+        setSetting("Enc", enc -> enc.set(boolToInt(on), "audio"));
+    }
+
+    @UICameraActionGetter(CHANNEL_RECORD_AUDIO)
+    public State getRecAudio() {
+        JsonType enc = (JsonType) getAttribute("Enc");
+        return enc == null ? null : OnOffType.valueOf(enc.getJsonNode().path("audio").asInt() == 1);
+    }
+
+    @UICameraAction(name = CHANNEL_STREAM_MAIN_RESOLUTION, order = 81, group = "VIDEO.ENC", subGroup = "VIDEO.mainStream", subGroupIcon = "fas fa-dice-six")
     @UIFieldSelection(value = SelectResolution.class, staticParameters = {"mainStream"})
     public void setStreamMainResolution(String value) {
-        setSetting("Enc", isp -> isp.set(value, "mainStream", "size"));
+        setSetting("Enc", enc -> enc.set(value, "mainStream", "size"));
     }
 
     @UICameraActionGetter(CHANNEL_STREAM_MAIN_RESOLUTION)
@@ -208,11 +207,10 @@
         return enc == null ? null : new StringType(enc.get("mainStream", "size").asText());
     }
 
-    @UICameraAction(name = CHANNEL_STREAM_MAIN_BITRATE, order = 81, icon = "fas fa-microphone-slash",
-            group = "ENC", subGroup = "mainStream", subGroupIcon = "fas fa-dice-six")
+    @UICameraAction(name = CHANNEL_STREAM_MAIN_BITRATE, order = 82, group = "VIDEO.ENC", subGroup = "VIDEO.mainStream", subGroupIcon = "fas fa-dice-six")
     @UIFieldSelection(value = SelectStreamValue.class, staticParameters = {"mainStream", "bitRate"})
     public void setStreamMainBitRate(String value) {
-        setSetting("Enc", isp -> isp.set(value, "mainStream", "bitRate"));
+        setSetting("Enc", enc -> enc.set(value, "mainStream", "bitRate"));
     }
 
     @UICameraActionGetter(CHANNEL_STREAM_MAIN_BITRATE)
@@ -221,11 +219,10 @@
         return enc == null ? null : new StringType(enc.get("mainStream", "bitRate").asText());
     }
 
-    @UICameraAction(name = CHANNEL_STREAM_MAIN_FRAMERATE, order = 82, icon = "fas fa-microphone-slash",
-            group = "ENC", subGroup = "mainStream", subGroupIcon = "fas fa-dice-six")
+    @UICameraAction(name = CHANNEL_STREAM_MAIN_FRAMERATE, order = 83, group = "VIDEO.ENC", subGroup = "VIDEO.mainStream", subGroupIcon = "fas fa-dice-six")
     @UIFieldSelection(value = SelectStreamValue.class, staticParameters = {"mainStream", "frameRate"})
     public void setStreamMainFrameRate(String value) {
-        setSetting("Enc", isp -> isp.set(value, "mainStream", "frameRate"));
+        setSetting("Enc", enc -> enc.set(value, "mainStream", "frameRate"));
     }
 
     @UICameraActionGetter(CHANNEL_STREAM_MAIN_FRAMERATE)
@@ -234,11 +231,10 @@
         return enc == null ? null : new StringType(enc.get("mainStream", "frameRate").asText());
     }
 
-    @UICameraAction(name = CHANNEL_STREAM_MAIN_H264_PROFILE, order = 83, icon = "fas fa-microphone-slash",
-            group = "ENC", subGroup = "mainStream", subGroupIcon = "fas fa-dice-six")
+    @UICameraAction(name = CHANNEL_STREAM_MAIN_H264_PROFILE, order = 84, group = "VIDEO.ENC", subGroup = "VIDEO.mainStream", subGroupIcon = "fas fa-dice-six")
     @UIFieldSelection(value = SelectStreamValue.class, staticParameters = {"mainStream", "profile"})
     public void setStreamMainH264Profile(String value) {
-        setSetting("Enc", isp -> isp.set(value, "mainStream", "profile"));
+        setSetting("Enc", enc -> enc.set(value, "mainStream", "profile"));
     }
 
     @UICameraActionGetter(CHANNEL_STREAM_MAIN_H264_PROFILE)
@@ -247,11 +243,10 @@
         return enc == null ? null : new StringType(enc.get("mainStream", "profile").asText());
     }
 
-    @UICameraAction(name = CHANNEL_STREAM_SECONDARY_RESOLUTION, order = 80, icon = "fas fa-microphone-slash",
-            group = "ENC", subGroup = "subStream", subGroupIcon = "fas fa-dice-six")
+    @UICameraAction(name = CHANNEL_STREAM_SECONDARY_RESOLUTION, order = 90, group = "VIDEO.ENC", subGroup = "VIDEO.subStream", subGroupIcon = "fas fa-dice-six")
     @UIFieldSelection(value = SelectResolution.class, staticParameters = {"subStream"})
     public void setStreamSecondaryResolution(String value) {
-        setSetting("Enc", isp -> isp.set(value, "subStream", "size"));
+        setSetting("Enc", enc -> enc.set(value, "subStream", "size"));
     }
 
     @UICameraActionGetter(CHANNEL_STREAM_SECONDARY_RESOLUTION)
@@ -260,11 +255,10 @@
         return enc == null ? null : new StringType(enc.get("subStream", "size").asText());
     }
 
-    @UICameraAction(name = CHANNEL_STREAM_SECONDARY_BITRATE, order = 81, icon = "fas fa-microphone-slash",
-            group = "ENC", subGroup = "subStream", subGroupIcon = "fas fa-dice-six")
+    @UICameraAction(name = CHANNEL_STREAM_SECONDARY_BITRATE, order = 91, group = "VIDEO.ENC", subGroup = "VIDEO.subStream", subGroupIcon = "fas fa-dice-six")
     @UIFieldSelection(value = SelectStreamValue.class, staticParameters = {"subStream", "bitRate"})
     public void setStreamSecondaryBitRate(String value) {
-        setSetting("Enc", isp -> isp.set(value, "subStream", "bitRate"));
+        setSetting("Enc", enc -> enc.set(value, "subStream", "bitRate"));
     }
 
     @UICameraActionGetter(CHANNEL_STREAM_SECONDARY_BITRATE)
@@ -273,11 +267,10 @@
         return enc == null ? null : new StringType(enc.get("subStream", "bitRate").asText());
     }
 
-    @UICameraAction(name = CHANNEL_STREAM_SECONDARY_FRAMERATE, order = 82, icon = "fas fa-microphone-slash",
-            group = "ENC", subGroup = "subStream", subGroupIcon = "fas fa-dice-six")
+    @UICameraAction(name = CHANNEL_STREAM_SECONDARY_FRAMERATE, order = 92, group = "VIDEO.ENC", subGroup = "VIDEO.subStream", subGroupIcon = "fas fa-dice-six")
     @UIFieldSelection(value = SelectStreamValue.class, staticParameters = {"subStream", "frameRate"})
     public void setStreamSecondaryFrameRate(String value) {
-        setSetting("Enc", isp -> isp.set(value, "subStream", "frameRate"));
+        setSetting("Enc", enc -> enc.set(value, "subStream", "frameRate"));
     }
 
     @UICameraActionGetter(CHANNEL_STREAM_SECONDARY_FRAMERATE)
@@ -286,8 +279,7 @@
         return enc == null ? null : new StringType(enc.get("subStream", "frameRate").asText());
     }
 
-    @UICameraAction(name = CHANNEL_STREAM_SECONDARY_H264_PROFILE, order = 83, icon = "fas fa-microphone-slash",
-            group = "ENC", subGroup = "subStream", subGroupIcon = "fas fa-dice-six")
+    @UICameraAction(name = CHANNEL_STREAM_SECONDARY_H264_PROFILE, order = 93, group = "VIDEO.ENC", subGroup = "VIDEO.subStream", subGroupIcon = "fas fa-dice-six")
     @UIFieldSelection(value = SelectStreamValue.class, staticParameters = {"subStream", "profile"})
     public void setStreamSecondaryH264Profile(String value) {
         setSetting("Enc", isp -> isp.set(value, "subStream", "profile"));
Index: camera/src/main/java/org/touchhome/bundle/camera/ui/UICameraAction.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- camera/src/main/java/org/touchhome/bundle/camera/ui/UICameraAction.java	(revision c4e0cf4d5c34c73fe731a965722bd1ecf7b021d1)
+++ camera/src/main/java/org/touchhome/bundle/camera/ui/UICameraAction.java	(date 1630999868719)
@@ -18,7 +18,7 @@
 
     int order();
 
-    String icon();
+    String icon() default "";
 
     String iconColor() default "inherit";
 
Index: camera/src/main/java/org/touchhome/bundle/camera/CameraController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- camera/src/main/java/org/touchhome/bundle/camera/CameraController.java	(revision c4e0cf4d5c34c73fe731a965722bd1ecf7b021d1)
+++ camera/src/main/java/org/touchhome/bundle/camera/CameraController.java	(date 1630606546707)
@@ -90,9 +90,7 @@
             throw new NotFoundException("Unable to find base camera for series: " + series.getTitle());
         }
 
-        UIInputBuilder uiInputBuilder = entityContext.ui().inputBuilder();
-
-        baseVideoCameraEntity.getCameraHandler().assembleActions(uiInputBuilder, false);
+        UIInputBuilder uiInputBuilder = baseVideoCameraEntity.getCameraHandler().assembleActions();
         UIActionHandler actionHandler = uiInputBuilder.findActionHandler(cameraActionRequest.name);
         if (actionHandler == null) {
             throw new RuntimeException("No camera action " + cameraActionRequest.name + "found");
@@ -122,7 +120,7 @@
             this.source = source;
             UIInputBuilder uiInputBuilder = entityContext.ui().inputBuilder();
             source.assembleActions(uiInputBuilder);
-            this.actions = uiInputBuilder.build();
+            this.actions = uiInputBuilder.buildAll();
         }
     }
 }
Index: zigbee/src/main/java/org/touchhome/bundle/zigbee/converter/impl/ZigBeeConverterMeteringInstantaneousDemand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- zigbee/src/main/java/org/touchhome/bundle/zigbee/converter/impl/ZigBeeConverterMeteringInstantaneousDemand.java	(revision c4e0cf4d5c34c73fe731a965722bd1ecf7b021d1)
+++ zigbee/src/main/java/org/touchhome/bundle/zigbee/converter/impl/ZigBeeConverterMeteringInstantaneousDemand.java	(date 1630936909018)
@@ -23,8 +23,8 @@
 
     private ZclAttribute attribute;
 
-    private Integer divisor;
-    private Integer multiplier;
+    private double divisor = 1.0;
+    private double multiplier = 1.0;
 
     @Override
     public int getInputAttributeId() {
@@ -33,7 +33,7 @@
 
     @Override
     public ZclClusterType getZclClusterType() {
-        return ZclClusterType.ELECTRICAL_MEASUREMENT;
+        return ZclClusterType.METERING;
     }
 
     @Override
@@ -59,9 +59,12 @@
             return false;
         }
 
-        attribute = clusterMetering.getAttribute(ZclMeteringCluster.ATTR_INSTANTANEOUSDEMAND);
+        attribute = clusterMetering.getAttribute(getInputAttributeId());
+        if (!configureReporting(attribute)) {
+            return false;
+        }
 
-        determineDivisorAndMultiplier(clusterMetering);
+        determineDivisorAndMultiplier();
 
         // Add a listener
         clusterMetering.addAttributeListener(this);
@@ -86,10 +89,10 @@
         }
         try {
             if (!cluster.discoverAttributes(false).get()
-                    && !cluster.isAttributeSupported(ZclMeteringCluster.ATTR_INSTANTANEOUSDEMAND)) {
+                    && !cluster.isAttributeSupported(getInputAttributeId())) {
                 return false;
             } else {
-                ZclAttribute attribute = cluster.getAttribute(ZclMeteringCluster.ATTR_INSTANTANEOUSDEMAND);
+                ZclAttribute attribute = cluster.getAttribute(getInputAttributeId());
                 if (attribute.readValue(Long.MAX_VALUE) == null) {
                     return false;
                 }
@@ -104,23 +107,26 @@
     @Override
     public void attributeUpdated(ZclAttribute attribute, Object val) {
         log.debug("{}: ZigBee attribute reports {}", endpoint.getIeeeAddress(), attribute);
-        if (attribute.getCluster() == ZclClusterType.ELECTRICAL_MEASUREMENT
-                && attribute.getId() == ZclMeteringCluster.ATTR_INSTANTANEOUSDEMAND) {
-            Integer value = (Integer) val;
+        if (attribute.getCluster() == ZclClusterType.METERING
+                && attribute.getId() == getInputAttributeId()) {
+            double value = (Integer) val;
             BigDecimal valueCalibrated = BigDecimal.valueOf(value * multiplier / divisor);
             updateChannelState(new DecimalType(valueCalibrated));
         }
     }
 
-    private void determineDivisorAndMultiplier(ZclMeteringCluster serverClusterMeasurement) {
+    private void determineDivisorAndMultiplier() {
         ZclAttribute divisorAttribute = clusterMetering.getAttribute(ZclMeteringCluster.ATTR_DIVISOR);
         ZclAttribute multiplierAttribute = clusterMetering.getAttribute(ZclMeteringCluster.ATTR_MULTIPLIER);
 
-        divisor = (Integer) divisorAttribute.readValue(Long.MAX_VALUE);
-        multiplier = (Integer) multiplierAttribute.readValue(Long.MAX_VALUE);
-        if (divisor == null || multiplier == null) {
-            divisor = 1;
-            multiplier = 1;
+        Integer iDiv = (Integer) divisorAttribute.readValue(Long.MAX_VALUE);
+        Integer iMult = (Integer) multiplierAttribute.readValue(Long.MAX_VALUE);
+        if (iDiv == null || iMult == null) {
+            iDiv = 1;
+            iMult = 1;
         }
+
+        divisor = iDiv;
+        multiplier = iMult;
     }
 }
Index: camera/src/main/java/org/touchhome/bundle/camera/setting/CameraStatusSetting.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- camera/src/main/java/org/touchhome/bundle/camera/setting/CameraStatusSetting.java	(date 1631472370156)
+++ camera/src/main/java/org/touchhome/bundle/camera/setting/CameraStatusSetting.java	(date 1631472370156)
@@ -0,0 +1,38 @@
+package org.touchhome.bundle.camera.setting;
+
+import org.touchhome.bundle.api.EntityContext;
+import org.touchhome.bundle.api.model.ActionResponseModel;
+import org.touchhome.bundle.api.model.Status;
+import org.touchhome.bundle.api.setting.SettingPluginStatus;
+import org.touchhome.bundle.camera.entity.BaseVideoCameraEntity;
+import org.touchhome.bundle.camera.entity.BaseVideoStreamEntity;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class CameraStatusSetting implements SettingPluginStatus {
+
+    @Override
+    public int order() {
+        return 400;
+    }
+
+    @Override
+    public List<BundleStatusInfo> getTransientStatuses(EntityContext entityContext) {
+        List<BundleStatusInfo> list = new ArrayList<>();
+        for (BaseVideoStreamEntity baseVideoStreamEntity : entityContext.findAll(BaseVideoStreamEntity.class)) {
+            if (baseVideoStreamEntity.getStatus() != Status.ONLINE) {
+                list.add(SettingPluginStatus.error(baseVideoStreamEntity.getStatus() + " " + baseVideoStreamEntity.getTitle() + " " + baseVideoStreamEntity.getStatusMessage()));
+            } else if (baseVideoStreamEntity instanceof BaseVideoCameraEntity && !((BaseVideoCameraEntity) baseVideoStreamEntity).isStart()) {
+                list.add(SettingPluginStatus.error(baseVideoStreamEntity.getStatus() + " " + baseVideoStreamEntity.getTitle() + " not started")
+                        .setActionHandler(uiInputBuilder ->
+                                uiInputBuilder.addButton("Start", "fas fa-hammer", "primary", (entityContext1, params) -> {
+                                    ((BaseVideoCameraEntity) baseVideoStreamEntity).setStart(true);
+                                    entityContext1.save(baseVideoStreamEntity);
+                                    return ActionResponseModel.success();
+                                })));
+            }
+        }
+        return list;
+    }
+}
